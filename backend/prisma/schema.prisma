// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// AI服务提供商表
model AiProvider {
  id                Int       @id @default(autoincrement())
  name              String    @unique @db.VarChar(100)
  displayName       String    @map("display_name") @db.VarChar(100)
  baseUrl           String    @map("base_url") @db.Text
  authType          String    @default("api_key") @map("auth_type") @db.VarChar(20)
  supportedModels   String[]  @default([]) @map("supported_models")
  rateLimitRpm      Int       @default(60) @map("rate_limit_rpm")
  rateLimitTpm      Int       @default(60000) @map("rate_limit_tpm")
  isActive          Boolean   @default(true) @map("is_active")
  metadata          Json      @default("{}")
  createdAt         DateTime  @default(now()) @map("created_at")
  updatedAt         DateTime  @updatedAt @map("updated_at")

  // 关联关系
  aiModels          AiModel[]

  @@map("ai_providers")
}

// AI模型配置表
model AiModel {
  id                Int         @id @default(autoincrement())
  providerId        Int         @map("provider_id")
  name              String      @db.VarChar(100)
  displayName       String      @map("display_name") @db.VarChar(100)
  apiKeyEncrypted   String?     @map("api_key_encrypted") @db.Text
  modelType         String      @default("chat") @map("model_type") @db.VarChar(50)
  parameters        Json        @default("{\"temperature\": 0.7, \"max_tokens\": 3000, \"top_p\": 1.0, \"frequency_penalty\": 0.0, \"presence_penalty\": 0.0}")
  role              String      @default("secondary") @db.VarChar(20) // primary/secondary/disabled
  priority          Int         @default(100)
  costPer1kTokens   Decimal     @default(0) @map("cost_per_1k_tokens") @db.Decimal(10, 6)
  contextWindow     Int         @default(4000) @map("context_window")
  isActive          Boolean     @default(true) @map("is_active")
  metadata          Json        @default("{}")
  createdAt         DateTime    @default(now()) @map("created_at")
  updatedAt         DateTime    @updatedAt @map("updated_at")

  // 关联关系
  provider          AiProvider  @relation(fields: [providerId], references: [id], onDelete: Cascade)
  apiCallLogs       ApiCallLog[]

  @@unique([providerId, name])
  @@map("ai_models")
}

// 提示词模板表
model PromptTemplate {
  id                    Int      @id @default(autoincrement())
  name                  String   @db.VarChar(100)
  type                  String   @db.VarChar(50) // system/user/format
  category              String   @default("general") @db.VarChar(50)
  systemPrompt          String?  @map("system_prompt") @db.Text
  userPromptTemplate    String?  @map("user_prompt_template") @db.Text
  formatInstructions    String?  @map("format_instructions") @db.Text
  variables             Json     @default("[]")
  version               Int      @default(1)
  status                String   @default("draft") @db.VarChar(20) // draft/active/deprecated
  description           String?  @db.Text
  tags                  String[] @default([])
  usageCount            Int      @default(0) @map("usage_count")
  effectivenessScore    Decimal? @map("effectiveness_score") @db.Decimal(3, 2)
  createdBy             Int?     @map("created_by")
  createdAt             DateTime @default(now()) @map("created_at")
  updatedAt             DateTime @updatedAt @map("updated_at")

  // 关联关系
  creator               AdminUser? @relation(fields: [createdBy], references: [id])

  @@unique([name, version])
  @@map("prompt_templates")
}

// 应用配置表
model AppConfig {
  id              Int      @id @default(autoincrement())
  platform        String   @db.VarChar(20) // web/ios/android/wechat
  configKey       String   @map("config_key") @db.VarChar(100)
  configValue     Json     @map("config_value")
  dataType        String   @default("json") @map("data_type") @db.VarChar(20)
  category        String   @default("general") @db.VarChar(50)
  description     String?  @db.Text
  version         Int      @default(1)
  isActive        Boolean  @default(true) @map("is_active")
  isSensitive     Boolean  @default(false) @map("is_sensitive")
  validationRules Json     @default("{}") @map("validation_rules")
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @updatedAt @map("updated_at")

  @@unique([platform, configKey])
  @@map("app_configs")
}

// 卦象数据表
model HexagramData {
  id                  Int      @id @default(autoincrement())
  name                String   @unique @db.VarChar(50)
  element             String   @db.VarChar(20)
  description         String?  @db.Text
  interpretation      String?  @db.Text
  favorableActions    String[] @default([]) @map("favorable_actions")
  unfavorableActions  String[] @default([]) @map("unfavorable_actions")
  timeInfo            Json     @default("{}") @map("time_info")
  directionInfo       Json     @default("{}") @map("direction_info")
  resolutionMethods   String[] @default([]) @map("resolution_methods")
  metadata            Json     @default("{}")
  version             Int      @default(1)
  isActive            Boolean  @default(true) @map("is_active")
  createdAt           DateTime @default(now()) @map("created_at")
  updatedAt           DateTime @updatedAt @map("updated_at")

  @@map("hexagram_data")
}

// 五行关系表
model ElementRelation {
  id                Int      @id @default(autoincrement())
  sourceElement     String   @map("source_element") @db.VarChar(20)
  targetElement     String   @map("target_element") @db.VarChar(20)
  relationType      String   @map("relation_type") @db.VarChar(20) // generate/overcome/neutral
  strength          Int      @default(1)
  description       String?  @db.Text
  effectDescription String?  @map("effect_description") @db.Text
  createdAt         DateTime @default(now()) @map("created_at")
  updatedAt         DateTime @updatedAt @map("updated_at")

  @@unique([sourceElement, targetElement])
  @@map("element_relations")
}

// 多语言内容表
model I18nContent {
  id           Int      @id @default(autoincrement())
  contentKey   String   @map("content_key") @db.VarChar(200)
  languageCode String   @map("language_code") @db.VarChar(10)
  contentValue String   @map("content_value") @db.Text
  contentType  String   @default("text") @map("content_type") @db.VarChar(50)
  category     String   @default("general") @db.VarChar(50)
  description  String?  @db.Text
  isActive     Boolean  @default(true) @map("is_active")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  @@unique([contentKey, languageCode])
  @@map("i18n_contents")
}

// API调用日志表
model ApiCallLog {
  id             BigInt   @id @default(autoincrement())
  modelId        Int?     @map("model_id")
  requestId      String?  @map("request_id") @db.VarChar(100)
  userId         String?  @map("user_id") @db.VarChar(100)
  platform       String?  @db.VarChar(20)
  promptHash     String?  @map("prompt_hash") @db.VarChar(64)
  tokensUsed     Int?     @map("tokens_used")
  cost           Decimal? @db.Decimal(10, 6)
  responseTimeMs Int?     @map("response_time_ms")
  status         String?  @db.VarChar(20) // success/error/timeout
  errorMessage   String?  @map("error_message") @db.Text
  metadata       Json     @default("{}")
  createdAt      DateTime @default(now()) @map("created_at")

  // 关联关系
  model          AiModel? @relation(fields: [modelId], references: [id])

  @@map("api_call_logs")
}

// 使用统计表
model UsageStatistic {
  id          BigInt   @id @default(autoincrement())
  date        DateTime @db.Date
  platform    String   @db.VarChar(20)
  metricName  String   @map("metric_name") @db.VarChar(100)
  metricValue BigInt   @map("metric_value")
  metadata    Json     @default("{}")
  createdAt   DateTime @default(now()) @map("created_at")

  @@unique([date, platform, metricName])
  @@map("usage_statistics")
}

// 管理员用户表
model AdminUser {
  id            Int      @id @default(autoincrement())
  username      String   @unique @db.VarChar(50)
  email         String   @unique @db.VarChar(100)
  passwordHash  String   @map("password_hash") @db.VarChar(255)
  fullName      String?  @map("full_name") @db.VarChar(100)
  role          String   @default("admin") @db.VarChar(50)
  permissions   Json     @default("[]")
  isActive      Boolean  @default(true) @map("is_active")
  lastLoginAt   DateTime? @map("last_login_at")
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")

  // 关联关系
  promptTemplates PromptTemplate[]
  operationLogs   OperationLog[]

  @@map("admin_users")
}

// 操作日志表
model OperationLog {
  id           BigInt     @id @default(autoincrement())
  userId       Int?       @map("user_id")
  action       String     @db.VarChar(100)
  resourceType String     @map("resource_type") @db.VarChar(50)
  resourceId   String?    @map("resource_id") @db.VarChar(100)
  oldValues    Json?      @map("old_values")
  newValues    Json?      @map("new_values")
  ipAddress    String?    @map("ip_address") @db.Inet
  userAgent    String?    @map("user_agent") @db.Text
  createdAt    DateTime   @default(now()) @map("created_at")

  // 关联关系
  user         AdminUser? @relation(fields: [userId], references: [id])

  @@map("operation_logs")
}
