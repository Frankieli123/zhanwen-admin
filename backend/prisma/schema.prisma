generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model AiProvider {
  id              Int       @id @default(autoincrement())
  name            String    @unique @db.VarChar(100)
  displayName     String    @map("display_name") @db.VarChar(100)
  baseUrl         String    @map("base_url")
  authType        String    @default("api_key") @map("auth_type") @db.VarChar(20)
  supportedModels String[]  @default([]) @map("supported_models")
  rateLimitRpm    Int       @default(60) @map("rate_limit_rpm")
  rateLimitTpm    Int       @default(60000) @map("rate_limit_tpm")
  isActive        Boolean   @default(true) @map("is_active")
  metadata        Json      @default("{}")
  createdAt       DateTime  @default(now()) @map("created_at")
  updatedAt       DateTime  @updatedAt @map("updated_at")
  aiModels        AiModel[]

  @@map("ai_providers")
}

model AiModel {
  id              Int          @id @default(autoincrement())
  providerId      Int          @map("provider_id")
  name            String       @db.VarChar(100)
  displayName     String       @map("display_name") @db.VarChar(100)
  apiKeyEncrypted String?      @map("api_key_encrypted")
  modelType       String       @default("chat") @map("model_type") @db.VarChar(50)
  parameters      Json         @default("{\"top_p\": 1.0, \"max_tokens\": 3000, \"temperature\": 0.7, \"presence_penalty\": 0.0, \"frequency_penalty\": 0.0}")
  role            String       @default("secondary") @db.VarChar(20)
  priority        Int          @default(100)
  costPer1kTokens Decimal      @default(0) @map("cost_per_1k_tokens") @db.Decimal(10, 6)
  contextWindow   Int          @default(4000) @map("context_window")
  isActive        Boolean      @default(true) @map("is_active")
  metadata        Json         @default("{}")
  createdAt       DateTime     @default(now()) @map("created_at")
  updatedAt       DateTime     @updatedAt @map("updated_at")
  provider        AiProvider   @relation(fields: [providerId], references: [id], onDelete: Cascade)
  apiCallLogs     ApiCallLog[]

  @@unique([providerId, name])
  @@map("ai_models")
}

model PromptTemplate {
  id                 Int        @id @default(autoincrement())
  name               String     @db.VarChar(100)
  type               String     @db.VarChar(50)
  category           String     @default("general") @db.VarChar(50)
  systemPrompt       String?    @map("system_prompt")
  userPromptTemplate String?    @map("user_prompt_template")
  formatInstructions String?    @map("format_instructions")
  variables          Json       @default("[]")
  version            Int        @default(1)
  status             String     @default("draft") @db.VarChar(20)
  description        String?
  tags               String[]   @default([])
  usageCount         Int        @default(0) @map("usage_count")
  effectivenessScore Decimal?   @map("effectiveness_score") @db.Decimal(3, 2)
  createdBy          Int?       @map("created_by")
  createdAt          DateTime   @default(now()) @map("created_at")
  updatedAt          DateTime   @updatedAt @map("updated_at")
  creator            AdminUser? @relation(fields: [createdBy], references: [id])

  @@unique([name, version])
  @@map("prompt_templates")
}

model AppConfig {
  id              Int      @id @default(autoincrement())
  platform        String   @db.VarChar(20)
  configKey       String   @map("config_key") @db.VarChar(100)
  configValue     Json     @map("config_value")
  dataType        String   @default("json") @map("data_type") @db.VarChar(20)
  category        String   @default("general") @db.VarChar(50)
  description     String?
  version         Int      @default(1)
  isActive        Boolean  @default(true) @map("is_active")
  isSensitive     Boolean  @default(false) @map("is_sensitive")
  validationRules Json     @default("{}") @map("validation_rules")
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @updatedAt @map("updated_at")

  @@unique([platform, configKey])
  @@map("app_configs")
}

model HexagramData {
  id                 Int      @id @default(autoincrement())
  name               String   @unique @db.VarChar(50)
  element            String   @db.VarChar(20)
  description        String?
  interpretation     String?
  favorableActions   String[] @default([]) @map("favorable_actions")
  unfavorableActions String[] @default([]) @map("unfavorable_actions")
  timeInfo           Json     @default("{}") @map("time_info")
  directionInfo      Json     @default("{}") @map("direction_info")
  resolutionMethods  String[] @default([]) @map("resolution_methods")
  metadata           Json     @default("{}")
  version            Int      @default(1)
  isActive           Boolean  @default(true) @map("is_active")
  createdAt          DateTime @default(now()) @map("created_at")
  updatedAt          DateTime @updatedAt @map("updated_at")

  @@map("hexagram_data")
}

model ElementRelation {
  id                Int      @id @default(autoincrement())
  sourceElement     String   @map("source_element") @db.VarChar(20)
  targetElement     String   @map("target_element") @db.VarChar(20)
  relationType      String   @map("relation_type") @db.VarChar(20)
  strength          Int      @default(1)
  description       String?
  effectDescription String?  @map("effect_description")
  createdAt         DateTime @default(now()) @map("created_at")
  updatedAt         DateTime @updatedAt @map("updated_at")

  @@unique([sourceElement, targetElement])
  @@map("element_relations")
}

model I18nContent {
  id           Int      @id @default(autoincrement())
  contentKey   String   @map("content_key") @db.VarChar(200)
  languageCode String   @map("language_code") @db.VarChar(10)
  contentValue String   @map("content_value")
  contentType  String   @default("text") @map("content_type") @db.VarChar(50)
  category     String   @default("general") @db.VarChar(50)
  description  String?
  isActive     Boolean  @default(true) @map("is_active")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  @@unique([contentKey, languageCode])
  @@map("i18n_contents")
}

model ApiCallLog {
  id             BigInt   @id @default(autoincrement())
  modelId        Int?     @map("model_id")
  requestId      String?  @map("request_id") @db.VarChar(100)
  userId         String?  @map("user_id") @db.VarChar(100)
  platform       String?  @db.VarChar(20)
  promptHash     String?  @map("prompt_hash") @db.VarChar(64)
  tokensUsed     Int?     @map("tokens_used")
  cost           Decimal? @db.Decimal(10, 6)
  responseTimeMs Int?     @map("response_time_ms")
  status         String?  @db.VarChar(20)
  errorMessage   String?  @map("error_message")
  metadata       Json     @default("{}")
  createdAt      DateTime @default(now()) @map("created_at")
  model          AiModel? @relation(fields: [modelId], references: [id])

  @@map("api_call_logs")
}

model UsageStatistic {
  id          BigInt   @id @default(autoincrement())
  date        DateTime @db.Date
  platform    String   @db.VarChar(20)
  metricName  String   @map("metric_name") @db.VarChar(100)
  metricValue BigInt   @map("metric_value")
  metadata    Json     @default("{}")
  createdAt   DateTime @default(now()) @map("created_at")

  @@unique([date, platform, metricName])
  @@map("usage_statistics")
}

model AdminUser {
  id              Int              @id @default(autoincrement())
  username        String           @unique @db.VarChar(50)
  email           String           @unique @db.VarChar(100)
  passwordHash    String           @map("password_hash") @db.VarChar(255)
  fullName        String?          @map("full_name") @db.VarChar(100)
  role            String           @default("admin") @db.VarChar(50)
  permissions     Json             @default("[]")
  isActive        Boolean          @default(true) @map("is_active")
  lastLoginAt     DateTime?        @map("last_login_at")
  createdAt       DateTime         @default(now()) @map("created_at")
  updatedAt       DateTime         @updatedAt @map("updated_at")
  operationLogs   OperationLog[]
  promptTemplates PromptTemplate[]

  @@map("admin_users")
}

model OperationLog {
  id           BigInt     @id @default(autoincrement())
  userId       Int?       @map("user_id")
  action       String     @db.VarChar(100)
  resourceType String     @map("resource_type") @db.VarChar(50)
  resourceId   String?    @map("resource_id") @db.VarChar(100)
  oldValues    Json?      @map("old_values")
  newValues    Json?      @map("new_values")
  ipAddress    String?    @map("ip_address") @db.Inet
  userAgent    String?    @map("user_agent")
  createdAt    DateTime   @default(now()) @map("created_at")
  user         AdminUser? @relation(fields: [userId], references: [id])

  @@map("operation_logs")
}
